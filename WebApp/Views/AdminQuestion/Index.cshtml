@model IEnumerable<Entities.Question>

@{
    ViewData["Title"] = "Index";
}

<h1>Question management</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<partial name="_FormAddQuestion" model="ViewBag.ModelQuestion" />

<div id="accordion">
    @foreach (var question in Model)
    {
        <partial name="_AccordionCard" model="question" />
    }
</div>

<partial name="_FormAddProposal" model="ViewBag.ModelProposal" />
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    $(function () {
        @*Add a question to a questionnaire*@
        $("#SubmitAddQuestion").submit(function (e) {
            e.preventDefault();
            var Entitled = $("#SubmitAddQuestion input#Entitled").val();
            var Timer = $("#SubmitAddQuestion input#Timer").val();
            var QuestionnaireId = $("#SubmitAddQuestion input#QuestionnaireId").val();
            var QuestionId = $("#SubmitAddQuestion input#Id").val();
            var token = $("#SubmitAddQuestion input[name='__RequestVerificationToken']").val();
            if (!QuestionId) {
                $.post("@(Url.Action("Add", "AdminQuestion"))", { Entitled: Entitled, Timer: Timer, QuestionnaireId: QuestionnaireId, __RequestVerificationToken: token },
                function (data) {
                    $("#accordion").append(data);
                });
            } else {
                $.post("@(Url.Action("Edit", "AdminQuestion"))", { Entitled: Entitled, Timer: Timer, QuestionnaireId: QuestionnaireId, Id: QuestionId , __RequestVerificationToken: token },
                function (data) {
                    $("#heading" + QuestionId).parent().replaceWith(data);
                    cancelModification();
                });
            }
        });

        @* Add a proposal to a question *@
        $("#SubmitAddProposal").submit(function (e) {
            e.preventDefault();
            var Entitled = $("#SubmitAddProposal input#Entitled").val();
            var IsCorrect = false;
            if ($('#SubmitAddProposal input#IsCorrect').is(":checked")) { IsCorrect = true; }
            var QuestionId = $("#SubmitAddProposal input#QuestionId").val();
            var ProposalId = $("#SubmitAddProposal input#Id").val();
            var token = $("#SubmitAddProposal input[name='__RequestVerificationToken']").val();
            if (!ProposalId) {
                $.post("@(Url.Action("Add", "AdminProposal"))", { Entitled: Entitled, IsCorrect: IsCorrect, QuestionId: QuestionId, __RequestVerificationToken: token },
                    function (data) {
                        $("#heading" + QuestionId).parent().replaceWith(data);
                    });
            } else {
                $.post("@(Url.Action("Edit", "AdminProposal"))", { Entitled: Entitled, IsCorrect: IsCorrect, QuestionId: QuestionId, Id: ProposalId, __RequestVerificationToken: token },
                    function (data) {
                        $("#heading" + QuestionId).parent().replaceWith(data);
                    });
            }
        });
    });

    @* display modal to display the proposal form *@
    function eventClickAddProposal(IdQuestion) {
        var TitleQuestion = $("#TitleQuestion" + IdQuestion).text();
        $("#ModalLabel").text(TitleQuestion);
        $("#SubmitAddProposal input#QuestionId").val(IdQuestion);
        @*delete old data for ex after editing*@
        $("#SubmitAddProposal input#Id").val("");
        $("#SubmitAddProposal input#Entitled").val("");
        $("#SubmitAddProposal input#IsCorrect").prop('checked', false);

        $('#ModalFormProposal').modal({
            keyboard: true
        });

        return false;
        }

        @* delete one proposal *@
        function eventClickDeleteProposal(IdProposal) {
            $.get("@(Url.Action("Delete", "AdminProposal"))/"+IdProposal, function (data) {
                $("#proposal" + IdProposal).remove();
            });
        }

        @* Edit Question *@
        $("#LinkCancelModification").hide();
        function eventClickEditQuestion(IdQuestion) {
            var EntitledToEdit = $("#EntitledEditQuestion" + IdQuestion).text();
            var TimerToEdit = $("#TimerEditQuestion" + IdQuestion).text();
            $("#SubmitAddQuestion input#Entitled").val(EntitledToEdit);
            $("#SubmitAddQuestion input#Timer").val(TimerToEdit);
            $("#SubmitAddQuestion input#Id").val(IdQuestion);
            $("#LinkCancelModification").show();
        }

        @* Cancel modification, i need this function because the same form is for add and edit*@
        function cancelModification() {
            $("#SubmitAddQuestion input#Id").val("");
            $("#SubmitAddQuestion input#Entitled").val("");
            $("#SubmitAddQuestion input#Timer").val("");
            $("#LinkCancelModification").hide();
        }

        @* Edit proposal *@
        function eventClickEditProposal(IdProposal, IdQuestion) {
            @* take old data *@
            var EntitledToEdit = $("#EntitledEditProposal" + IdProposal).text();
            var IsCorrect = $("#IsCorrectEditProposal" + IdProposal).text();

            @* build the modal window *@
            var TitleQuestion = $("#TitleQuestion" + IdQuestion).text();
            $("#ModalLabel").text(TitleQuestion);

            $("#SubmitAddProposal input#QuestionId").val(IdQuestion);
            $("#SubmitAddProposal input#Id").val(IdProposal);
            $("#SubmitAddProposal input#Entitled").val(EntitledToEdit);
            @* avoid changing the text of IsCorrect*@
            $("#SubmitAddProposal input#IsCorrect").prop('checked', false);
            if (IsCorrect == "True") {
                $("#SubmitAddProposal input#IsCorrect").prop('checked', true);
            }

            $('#ModalFormProposal').modal({
                keyboard: true
            });
            return false;
        }
</script>
}